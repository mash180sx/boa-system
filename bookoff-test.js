// Generated by CoffeeScript 1.3.3
(function() {
  var bo, conf, getBOGenreList, getBOStockList;

  conf = require('./config');

  bo = require('./lib/bookoff');

  getBOGenreList = function(cb) {
    var name, retry;
    name = "getBOGenreList";
    retry = 0;
    setTimeout(function() {
      return bo.getBOGenreList(conf, function(err, result) {
        if (err === null) {
          return cb(null, result);
        }
        console.log("Error: " + err);
        return setTimeout(function() {
          console.log("" + name + ": retry=" + (++retry));
          return getBOGenreList(cb);
        }, 15 * 1000);
      });
    }, 200);
  };

  getBOStockList = function(id, page, cb) {
    var name, retry;
    name = "getBOStockList";
    retry = 0;
    setTimeout(function() {
      return bo.getBOStockList(conf, id, page, function(err, result) {
        if (err === null) {
          return cb(null, result);
        }
        console.log("Error: " + err);
        return setTimeout(function() {
          console.log("" + name + ": retry=" + (++retry));
          return getBOStockList(id, page, cb);
        }, 15 * 1000);
      });
    }, 0);
  };

  getBOGenreList(function(err, genres) {
    var len, map;
    if (err) {
      return console.log("Error: " + err);
    }
    console.log("genres:", genres);
    len = genres.length;
    console.log("len: " + len);
    map = function(i) {
      var count, depth, genre, map2, total;
      console.log("map " + i + " / " + len);
      if (i === len) {
        console.log("end");
        process.exit();
      }
      if ((genre = genres[i])) {
        genre = genres[i];
        total = (depth = conf.bookoff.depth) > 0 ? depth * 20 : 1000 * 1000;
        count = 0;
        map2 = function(page) {
          console.log("map2 " + genre.id + ", " + page + " : " + count + "/" + total);
          return getBOStockList(genre.id, page, function(err, stocks) {
            var _ref;
            total = stocks.total;
            if (err) {
              console.log("Error: " + err);
            }
            count += stocks != null ? (_ref = stocks.list) != null ? _ref.length : void 0 : void 0;
            console.log("count: " + count + ", total: " + total);
            if (count < total) {
              return process.nextTick((function() {
                return map2(page + 1);
              }));
            } else {
              return process.nextTick((function() {
                return map(i + 1);
              }));
            }
          });
        };
        return map2(1);
      } else {
        console.log("deleted");
        return process.nextTick((function() {
          return map(i + 1);
        }));
      }
    };
    return map(0);
  });

}).call(this);
