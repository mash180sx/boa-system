// Generated by CoffeeScript 1.3.1
(function() {
  var OperationHelper;

  OperationHelper = require('apac').OperationHelper;

  /*
  ##
  ## apac (Amazon Product Advertising Client)による Amazon 情報取得
  ## 
  ##  ・JAN(EAN)により、最大10個まで検索
  ##  
  ## input      : conf コンフィギュレーション
  ##  = {
  ##    awsId: conf.awsId,
  ##    awsSecret: conf.awsSecret,
  ##    assocId: conf.assocId
  ##  }
  ## input      : JANS 配列（最大10件）
  ## output : callback(err, items) コールバック関数 items は Amazon 情報リスト(配列)
  */


  exports.getApaclist = function(conf, JANS, cb) {
    var opHelper, params;
    params = {
      awsId: conf.awsId,
      awsSecret: conf.awsSecret,
      assocId: conf.assocId,
      endPoint: conf.endPoint
    };
    JANS = JANS.slice(0, 10);
    opHelper = new OperationHelper(params);
    return opHelper.execute('ItemLookup', {
      Condition: 'All',
      IdType: 'EAN',
      SearchIndex: 'All',
      ItemId: "" + (JANS.join(',')),
      ResponseGroup: "ItemAttributes,OfferSummary,SalesRank"
    }, function(err, results) {
      var i, items, result, _i, _len, _ref;
      items = [];
      _ref = results.Items.Item;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        result = _ref[i];
        items[i] = {
          JAN: result.ItemAttributes.EAN,
          ASIN: result.ASIN,
          url: result.DetailPageURL,
          title: result.ItemAttributes.Title,
          author: result.ItemAttributes.Author,
          "new": Number(result.OfferSummary.LowestNewPrice.Amount),
          old: Number(result.OfferSummary.LowestUsedPrice.Amount),
          rank: Number(result.SalesRank)
        };
      }
      return cb(err, items);
    });
  };

}).call(this);
