// Generated by CoffeeScript 1.3.1
(function() {
  var OperationHelper, Sync;

  Sync = require('sync');

  OperationHelper = require('apac').OperationHelper;

  /*
  ##
  ## apac (Amazon Product Advertising Client)による Amazon 情報取得
  ## 
  ##  ・JAN(EAN)により、最大10個まで検索
  ##  
  ## input      : conf コンフィギュレーション
  ##  = {
  ##    awsId: conf.awsId,
  ##    awsSecret: conf.awsSecret,
  ##    assocId: conf.assocId
  ##  }
  ## input      : JANS 配列（最大10件）
  ## output : callback(err, items) コールバック関数 items は Amazon 情報リスト(配列)
  */


  exports.getApaclist = function(conf, JANS, cb) {
    var itemId, opHelper, params;
    params = {
      awsId: conf.awsId,
      awsSecret: conf.awsSecret,
      assocId: conf.assocId,
      endPoint: conf.endPoint
    };
    if (conf.proxy != null) {
      params.proxy = conf.proxy;
    }
    if (conf.port != null) {
      params.port = conf.port;
    }
    JANS = JANS.slice(0, 10);
    opHelper = new OperationHelper(params);
    itemId = JANS.join(',');
    return opHelper.execute('ItemLookup', {
      Condition: 'All',
      IdType: 'EAN',
      SearchIndex: 'All',
      ItemId: "" + itemId,
      ResponseGroup: "ItemAttributes,OfferSummary,SalesRank"
    }, function(err, results) {
      var i, items, result, valid, _i, _len, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;
      valid = (_ref = results.Items) != null ? (_ref1 = _ref.Request) != null ? _ref1.IsValid : void 0 : void 0;
      console.log("valid: " + valid);
      if (valid === 'True') {
        items = [];
        _ref2 = results.Items.Item;
        for (i = _i = 0, _len = _ref2.length; _i < _len; i = ++_i) {
          result = _ref2[i];
          items[i] = {
            JAN: (_ref3 = result.ItemAttributes) != null ? _ref3.EAN : void 0,
            ASIN: result.ASIN,
            url: result.DetailPageURL,
            title: (_ref4 = result.ItemAttributes) != null ? _ref4.Title : void 0,
            author: (_ref5 = result.ItemAttributes) != null ? _ref5.Author : void 0,
            "new": Number((_ref6 = result.OfferSummary) != null ? (_ref7 = _ref6.LowestNewPrice) != null ? _ref7.Amount : void 0 : void 0),
            old: Number((_ref8 = result.OfferSummary) != null ? (_ref9 = _ref8.LowestUsedPrice) != null ? _ref9.Amount : void 0 : void 0),
            rank: Number(result.SalesRank)
          };
        }
        return cb(err, items);
      } else {
        return Sync(function() {
          console.log(results);
          Sync.sleep(15 * 1000);
          return cb(err, results);
        });
      }
    });
  };

}).call(this);
