// Generated by CoffeeScript 1.3.1
(function() {
  var OperationHelper;

  OperationHelper = require('apac').OperationHelper;

  /*
  ##
  ## apac (Amazon Product Advertising Client)による Amazon 情報取得
  ## 
  ##  ・JAN(EAN)により、最大10個まで検索
  ##  
  ## input      : conf コンフィギュレーション
  ##  = {
  ##    awsId: conf.awsId,
  ##    awsSecret: conf.awsSecret,
  ##    assocId: conf.assocId
  ##  }
  ## input      : JANS 配列（最大10件）
  ## output : callback(err, items) コールバック関数 items は Amazon 情報リスト(配列)
  */


  exports.getApaclist = function(conf, JANS, cb) {
    var itemId, opHelper, params;
    params = {
      awsId: conf.awsId,
      awsSecret: conf.awsSecret,
      assocId: conf.assocId,
      endPoint: conf.endPoint
    };
    if (conf.proxy != null) {
      params.proxy = conf.proxy;
    }
    if (conf.port != null) {
      params.port = conf.port;
    }
    JANS = JANS.slice(0, 10);
    opHelper = new OperationHelper(params);
    itemId = JANS.join(',');
    console.log(itemId);
    return opHelper.execute('ItemLookup', {
      Condition: 'All',
      IdType: 'EAN',
      SearchIndex: 'All',
      ItemId: "" + itemId,
      ResponseGroup: "ItemAttributes,OfferSummary,SalesRank"
    }, function(err, results) {
      console.log(results.Items.Request.IsValid);
      /*
          items = []
          for result, i in results.Items.Item
            items[i] =
              JAN: result.ItemAttributes?.EAN
              ASIN: result.ASIN
              url: result.DetailPageURL
              title: result.ItemAttributes?.Title
              author: result.ItemAttributes?.Author
              new: Number result.OfferSummary?.LowestNewPrice?.Amount
              old: Number result.OfferSummary?.LowestUsedPrice?.Amount
              rank: Number result.SalesRank
          cb err, items
      */

      return cb(err, results);
    });
  };

}).call(this);
