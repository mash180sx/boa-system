// Generated by CoffeeScript 1.3.3
(function() {
  var httpGet, urlAdult, urlStock, _getItemDetail;

  httpGet = require('./httpGet').httpGet;

  /*
  //
  // bookoffに関する細かな定義
  //
  //  bg=XXXX : ジャンル
  //  st=u : 中古在庫あり
  */


  urlStock = '/display/L001,st=u';

  /*
  // p=X : ページ番号(1は省略)
  // &isAdult=y : アダルト認証OK
  */


  urlAdult = '&isAdult=y';

  /*
  // Bookoff : トップページからジャンル毎の物件リストを取得
  // input    : options  = {
  //              minPrice: 取得する物件情報の最低価格を指定
  //              }
  // output : callback(err, genre) コールバック関数 genreはジャンル情報リスト(配列)
  */


  exports.getBOGenreList = function(conf, callback) {
    var genreUrl, minPrice, urlPrice, urlTop;
    urlTop = 'http://www.bookoffonline.co.jp/top/CSfTop.jsp';
    genreUrl = "" + urlTop + urlStock + ",bg=";
    minPrice = conf.bookoff.minPrice;
    urlPrice = minPrice > 0 ? ",pr=" + minPrice + "-" : "";
    return httpGet(urlTop, conf.http, function(err, $) {
      var $a, arr, cb, count, genre, href, index, item, len, primary, _i, _len;
      if (err) {
        return callback(err);
      }
      genre = [];
      index = 0;
      count = 0;
      arr = [2, 3, 4, 5, 6];
      len = arr.length;
      for (_i = 0, _len = arr.length; _i < _len; _i++) {
        item = arr[_i];
        $a = $('#navi0' + item + ' a');
        href = $a.attr('href');
        primary = $a.text();
        /*
                // *
                // *url 設定 TODO:
                // *
        */

        cb = (function(href, primary) {
          return function(err, $2) {
            var arr2, i, id, len2, secondary, self, _genre, _j, _len1;
            if (!$2) {
              count++;
              console.log("$2 is undefined : " + count + "/" + len + " error: " + err);
              if (count === len) {
                console.log("" + count + ": " + genre);
                callback(null, genre);
              } else {
                return;
              }
            }
            arr2 = $2('ul.list01 li a').toArray();
            len2 = arr2.length;
            for (i = _j = 0, _len1 = arr2.length; _j < _len1; i = ++_j) {
              self = arr2[i];
              href = $2(self).attr('href');
              id = String(href.match(/bg=\d+/)).replace('bg=', '');
              secondary = $2(self).text();
              _genre = {
                id: id,
                category: {
                  primary: primary,
                  secondary: secondary
                },
                url: href
              };
              genre.push(_genre);
              index++;
              if (count + 1 === len && i + 1 === len2) {
                callback(null, genre);
              }
            }
            count++;
          };
        })(href, primary);
        httpGet(href, conf.http, cb);
      }
    });
  };

  /*
  // Bookoff : genruで与えられるジャンル番号から在庫リスト情報(Max 20件の物件データ)を取得する
  // input  : conf = { bookoff: {
  //            minPrice: 取得する物件情報の最低価格を指定
  //            stock: true ならジャンルのtotal件数と在庫のチェックのみ実施
  //          }}
  // input  : genru ジャンル番号
  // input  : page ページ番号を指定
  // output : callback(err, stock) コールバック関数 stockは在庫リスト情報
  */


  exports.getBOStockList = function(conf, genru, page, callback) {
    var minPrice, stock, stockflag, url, urlPage, urlPrice;
    url = "http://www.bookoffonline.co.jp/display/L001,st=u,bg=" + genru;
    minPrice = conf.bookoff.minPrice;
    urlPrice = minPrice ? ",pr=" + minPrice + "-" : '';
    stockflag = conf.bookoff.stock;
    urlPage = page && page > 1 ? ",p=" + page : '';
    url = url + urlPrice + urlAdult + urlPage;
    stock = {};
    return httpGet(url, conf.http, function(err, $) {
      var re;
      if (err) {
        return callback(err);
      }
      if (!$('#resList').text()) {
        console.log("検索結果 0, " + url);
        stock.total = 0;
        return callback(null, stock);
      }
      re = $('#resList .numbers').text().match(/\d+/g);
      stock.total = Number(re[2]);
      stock.list = [];
      $('.list_group').each(function(index) {
        var list;
        list = {};
        list.sku = $(this).find('.cb').attr('value').slice(1);
        if (!stockflag) {
          list.title = $(this).find('.itemttl a').text();
          list.author = $(this).find('.author').text();
          list.price = {};
          $(this).find('tr').each(function(index2) {
            switch ($(this).find('th').text()) {
              case '定価':
                list.price["new"] = String($(this).find('td').text().replace(',', '').match(/￥\d+/)).replace('￥', '');
                break;
              case '中古価格':
                list.price.old = String($(this).find('td').text().replace(',', '').match(/￥\d+/)).replace('￥', '');
            }
            return list.amount = 1;
            /*
                      // TODO: JANを取得する
                      //
                      //_getItemDetail(list.sku, function(err, detail) {
                      //  if(err) return callback(err);
                      //  list.JAN = detail.JAN;
                      //});
                      //
            */

          });
        }
        return stock.list.push(list);
      });
      return callback(null, stock);
    });
  };

  _getItemDetail = function(sku, conf, callback) {
    var url;
    url = "http://www.bookoffonline.co.jp/old/" + sku + urlAdult;
    return httpGet(url, conf.http, function(err, $) {
      var detail;
      if (err) {
        return callback(err);
      }
      detail = {};
      detail.sku = sku;
      detail.title = $('#ttl_det').text();
      detail.author = $('#ttl_nam a').text();
      detail.type = $('.type').text().trim();
      detail.price = {};
      $('#spec_table tr').each(function(index) {
        switch ($(this).find('th').text()) {
          case '定価':
            return detail.price["new"] = String($(this).find('td').text().replace(',', '').match(/￥\d+/)).replace('￥', '');
          case '発送時期':
            return detail.send = $(this).find('td').text();
        }
      });
      detail.price.old = String($('.oldprice').text().replace(',', '').match(/￥\d+/)).replace('￥', '');
      $('.infotxt tr').each(function(index) {
        switch ($(this).find('th').text()) {
          case '販売会社／発売会社':
            return detail.publisher = $(this).find('td').text().trim();
          case '発売年月日':
            return detail.create = $(this).find('td').text().trim();
          case 'JAN':
            return detail.JAN = $(this).find('td').text().trim();
        }
      });
      if ($('.nosotck').text()) {
        detail.send = $('.nosotck').text().trim();
        detail.amount = 0;
      } else {
        detail.amount = 1;
      }
      return callback(null, detail);
    });
  };

  exports.getBOItemDetail = function(sku, conf, callback) {
    return _getItemDetail(sku, conf, callback);
  };

}).call(this);
