// Generated by CoffeeScript 1.3.1
(function() {
  var DBModel, mongodb,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  mongodb = require('mongodb');

  module.exports = DBModel = (function(_super) {

    __extends(DBModel, _super);

    DBModel.name = 'DBModel';

    function DBModel(conf) {
      var server;
      if (conf == null) {
        conf = {
          name: 'test',
          host: 'localhost',
          port: 27017
        };
      }
      this.conf = conf;
      server = new mongodb.Server(conf.host, conf.port, {});
      this.client = new mongodb.Db(conf.name, server, {});
    }

    DBModel.prototype.open = function(conf, cb) {
      if (conf == null) {
        conf = this.conf;
      }
      return this.client.open(function(err, client) {
        var Categories, Commodities;
        if (err) {
          return callback(err);
        }
        Categories = client.collection('categories');
        exports.Categories = Categories;
        Commodities = client.collection('commodities');
        exports.Commodities = Commodities;
        if (conf.clear) {
          Categories.drop();
          Commodities.drop();
          Commodities.ensureIndex('MID');
          Commodities.ensureIndex('sku');
          Commodities.ensureIndex('JAN');
          Commodities.ensureIndex('price.fixed');
          Commodities.ensureIndex('price.new');
          Commodities.ensureIndex('price.old');
          Commodities.ensureIndex('price.buy');
          Commodities.ensureIndex('amount');
          Commodities.ensureIndex('isbn13');
          Commodities.ensureIndex('isbn10');
          Commodities.ensureIndex('pricecheck');
          Commodities.ensureIndex('pricecheck.asin');
          Commodities.ensureIndex('pricecheck.new');
          Commodities.ensureIndex('pricecheck.old');
          Commodities.ensureIndex('pricecheck.lank');
          Commodities.ensureIndex('amazon');
          Commodities.ensureIndex('amazon.asin');
          Commodities.ensureIndex('amazon.new');
          Commodities.ensureIndex('amazon.old');
          Commodities.ensureIndex('amazon.rank');
        }
        return cb(null, client);
      });
    };

    return DBModel;

  })(mongodb);

}).call(this);
