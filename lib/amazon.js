// Generated by CoffeeScript 1.3.1
(function() {
  var getDetail, getKeyword, httpGet, urlDetail, urlKeyword, urlTop;

  httpGet = require('./httpGet').httpGet;

  /*
  //
  //  Amazon から asin により詳細情報取得
  // 
  //  
  //  http://www.amazon.co.jp/dp/B00005GOBJ
  //
  //  TODO: adult secure ?
  */


  urlTop = 'http://www.amazon.co.jp';

  urlDetail = '/dp/';

  exports.getDetail = getDetail = function(conf, asin, callback) {
    var url;
    url = urlTop + urlDetail + asin;
    console.log("url: " + url);
    return httpGet(url, conf, function(err, $) {
      var $li, result;
      if (err) {
        return callback(err);
      }
      result = {};
      $li = $('div#detail_txt li');
      $li.each(function(index) {
        var self;
        self = $(this);
        switch (index) {
          case 0:
            return result.release = self.text().match(/\d\d\d\d-\d\d-\d\d/)[0];
          case 1:
            return result.author = self.text().replace('作者：', '');
          case 2:
            return result.publish = self.text().replace('メーカー：', '');
          case 3:
            return result.JAN = self.text().match(/\w+/g)[1];
          case 4:
            return result["new"] = Number(self.text().match(/\d+/)[0]);
          case 5:
            return result.old = Number(self.text().match(/\d+/)[0]);
          case 6:
            return result.url = self.children().attr('href');
        }
      });
      return callback(null, result);
    });
  };

  /*
  //
  //  Amazon から JAN により asin コード取得
  // 
  //  
  //  http://www.amazon.co.jp/s/field-keywords=9784387872368
  */


  urlKeyword = '/s/field-keywords=';

  exports.getKeyword = getKeyword = function(conf, JAN, callback) {
    var url;
    url = urlTop + urlKeyword + JAN;
    console.log("url: " + url);
    return httpGet(url, conf, function(err, $) {
      var $li, result;
      if (err) {
        return callback(err);
      }
      result = {};
      $li = $('div#detail_txt li');
      $li.each(function(index) {
        var self;
        self = $(this);
        switch (index) {
          case 0:
            return result.release = self.text().match(/\d\d\d\d-\d\d-\d\d/)[0];
          case 1:
            return result.author = self.text().replace('作者：', '');
          case 2:
            return result.publish = self.text().replace('メーカー：', '');
          case 3:
            return result.JAN = self.text().match(/\w+/g)[1];
          case 4:
            return result["new"] = Number(self.text().match(/\d+/)[0]);
          case 5:
            return result.old = Number(self.text().match(/\d+/)[0]);
          case 6:
            return result.url = self.children().attr('href');
        }
      });
      return callback(null, result);
    });
  };

}).call(this);
