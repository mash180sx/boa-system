// Generated by CoffeeScript 1.3.3
(function() {
  var httpGet, strong, urlDetail, urlJan, urlSplit, urlTop;

  httpGet = require('./httpGet').httpGet;

  /*
  //
  // pricecheckに関する細かな定義
  // 
  //  ・JAN(EAN)により、最大10個まで検索可能
  //  
  //  http://so-bank.jp/choice/?ean=9784876999767+%0D%0A9784839941239+%0D%0A9784401748693+%0D%0A9784120042201+%0D%0A9784860850999+%0D%0A9784776808121+%0D%0A9784046217585+%0D%0A9784336052117+%0D%0A9784490206937+%0D%0A9784829144916+%0D%0A
  */


  urlTop = 'http://so-bank.jp';

  urlJan = '/choice/?ean=';

  urlSplit = '+%0D%0A';

  strong = function(self, result, key) {
    var re;
    re = self.find('strong').text().match(/\d+/);
    return result[key] = re ? Number(re[0]) : 0;
  };

  /*
  // PriceCheck : JAN(最大10件)に対応するAmazon（PriceCheck）情報を取得
  // input      : conf コンフィギュレーション
  // input      : JANS 配列（最大10件）
  // output : callback(err, genre) コールバック関数 genreはジャンル情報リスト(配列)
  */


  exports.getPCInfolist = function(conf, JANS, callback) {
    var JAN, url, _i, _len;
    url = urlTop + urlJan;
    for (_i = 0, _len = JANS.length; _i < _len; _i++) {
      JAN = JANS[_i];
      url = url + JAN + urlSplit;
    }
    return httpGet(url, conf, function(err, $) {
      var $searchResult, results;
      if (err) {
        return callback(err);
      }
      results = [];
      $searchResult = $('.searchResult');
      $searchResult.each(function(index) {
        var asin, pcUrl, result, self;
        self = $(this);
        pcUrl = self.children().children().attr('href');
        asin = pcUrl.replace('/detail/?code=', '');
        result = {
          JAN: JANS[index],
          asin: asin,
          url: urlTop + pcUrl
        };
        $($($(self.children()[1]).children()).children()).each(function(index2) {
          self = $(this);
          switch (index2) {
            case 0:
              return result.title = self.find('a').text();
            case 1:
              return result.author = self.text();
            case 2:
              return strong(self, result, 'new');
            case 3:
              return strong(self, result, 'old');
            case 4:
              return strong(self, result, 'past');
            case 5:
              return strong(self, result, 'diff');
            case 6:
              return strong(self, result, 'rank');
          }
        });
        return results[index] = result;
      });
      return callback(null, results);
    });
  };

  exports.getList = exports.getPCInfolist;

  urlDetail = '/detail/?code=';

  exports.getDetail = function(conf, asin, callback) {
    var url;
    url = urlTop + urlDetail + asin;
    return httpGet(url, conf, function(err, $) {
      var $li, result;
      if (err) {
        return callback(err);
      }
      result = {};
      $li = $('div#detail_txt li');
      $li.each(function(index) {
        var re, self;
        self = $(this);
        switch (index) {
          case 0:
            return result.release = (re = self.text().match(/\d\d\d\d-\d\d-\d\d/)) != null ? re[0] : (re = self.text().match(/\d\d\d\d-\d\d/)) != null ? re[0] : null;
          case 1:
            return result.author = self.text().replace('作者：', '');
          case 2:
            return result.publish = self.text().replace('メーカー：', '');
          case 3:
            return result.JAN = (re = self.text().match(/\w+/g)) != null ? re[1] : null;
          case 4:
            return result["new"] = (re = self.text().match(/\d+/)) != null ? Number(re[0]) : 0;
          case 5:
            return result.old = (re = self.text().match(/\d+/)) != null ? Number(re[0]) : 0;
          case 6:
            return result.url = self.children().attr('href');
        }
      });
      return callback(null, result);
    });
  };

}).call(this);
