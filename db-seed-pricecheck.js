// Generated by CoffeeScript 1.3.1
(function() {
  var Sync, cluster, conf, db, httpGet, numWorkers, pc, skip;

  Sync = require('sync');

  cluster = require('cluster');

  numWorkers = require('os').cpus().length;

  conf = require('./config');

  pc = require('./lib/pricecheck');

  db = require('./lib/db');

  httpGet = require('./lib/httpGet');

  if (process.argv.length >= 3) {
    skip = Number(process.argv[2]);
    console.log("skip: " + skip);
  } else {
    skip = 0;
  }

  /*
  ## main:
  */


  db.open(conf.db, function(err, client) {
    var Commodities, cursor, field, key, options, query;
    if (err) {
      throw err;
    }
    Commodities = client.collection('commodities');
    key = 'JAN';
    query = {};
    query[key] = {
      $ne: ''
    };
    query.amazon = {
      $exists: false
    };
    field = {
      _id: 0
    };
    field[key] = 1;
    options = {
      sort: key
    };
    if (skip > 0) {
      options.skip = skip;
    }
    cursor = Commodities.find(query, field, options);
    return Sync(function() {
      var JANS, doc, getter, index, unit, updater;
      index = 0 + skip;
      unit = 10;
      JANS = [];
      updater = function(data) {
        var d, i, update, _i, _len, _results;
        _results = [];
        for (i = _i = 0, _len = data.length; _i < _len; i = ++_i) {
          d = data[i];
          query[key] = d.JAN;
          update = {
            $set: {
              amazon: d
            }
          };
          options = {
            safe: true
          };
          _results.push(Sync(function() {
            var doc;
            return doc = Commodities.update.sync(Commodities, query, update, options);
          }));
        }
        return _results;
      };
      getter = function() {
        var JAN, data, i, _i, _len;
        data = pc.getList.sync(null, conf.http, JANS);
        if (JANS.length === data.length) {
          updater(data);
        } else {
          console.log("data contains valid data");
          for (i = _i = 0, _len = JANS.length; _i < _len; i = ++_i) {
            JAN = JANS[i];
            data = pc.getList.sync(null, conf.http, [JAN]);
            if (data.length > 0) {
              updater(data);
            } else {
              updater([
                {
                  JAN: JAN,
                  asin: null
                }
              ]);
            }
          }
        }
        return JANS = [];
      };
      while ((doc = cursor.nextObject.sync(cursor)) !== null) {
        console.log(index + 1, doc);
        JANS[index % unit] = doc.JAN;
        if ((++index % unit) === 0) {
          getter();
        }
      }
      if (JANS.length > 0) {
        getter();
      }
      return client.close();
    });
  });

}).call(this);
