// Generated by CoffeeScript 1.3.1
(function() {
  var EventEmitter, conf, phantom, setGlobal, viewSize,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  phantom = require('phantom');

  conf = require('./config');

  EventEmitter = require('events').EventEmitter;

  setGlobal = function(page, name, data) {
    var fn, json;
    json = JSON.stringify(data);
    fn = "return window[" + (JSON.stringify(name)) + "]=" + json + ";";
    return page.evaluate(new Function(fn));
  };

  viewSize = {
    width: 1024,
    height: 768
  };

  phantom.create(function(ph) {
    return ph.createPage(function(page) {
      var AmaMan, amaMan;
      AmaMan = (function(_super) {

        __extends(AmaMan, _super);

        AmaMan.name = 'AmaMan';

        function AmaMan() {
          this.route = 0;
        }

        AmaMan.prototype.trigger = function() {
          this.route++;
          console.log("emit 'next', " + this.route);
          return this.emit('next', this.route);
        };

        return AmaMan;

      })(EventEmitter);
      amaMan = new AmaMan;
      page.set('onConsoleMessage', function(msg) {
        console.log("sandbox: " + msg);
      });
      page.set('onLoadStarted', function() {
        return console.log('Start loading');
      });
      page.set('onLoadFinished', function(status) {
        var route;
        page.evaluate(function() {
          console.log("title:" + document.title);
        });
        route = amaMan.route;
        console.log("route: " + route + ", status: " + status);
        page.render("amatest" + route + ".png");
        amaMan.trigger();
      });
      amaMan.on('next', function(route) {
        var item;
        switch (route) {
          case 1:
            page.open("https://www.amazon.co.jp/ap/signin?_encoding=UTF8&openid.assoc_handle=jpflex&openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&openid.mode=checkid_setup&openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&openid.ns.pape=http%3A%2F%2Fspecs.openid.net%2Fextensions%2Fpape%2F1.0&openid.pape.max_auth_age=900&openid.return_to=https%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fseller-account%2Fmanagement%2Fyour-account.html%3Fie%3DUTF8%26ref_%3Dya__1");
            break;
          case 2:
            setGlobal(page, '__conf__', conf.amazon);
            page.evaluate(function() {
              document.querySelector("input#ap_email").value = __conf__.email;
              document.querySelector("input#ap_password").value = __conf__.password;
              return document.querySelector("form#ap_signin_form").submit();
            });
            break;
          case 3:
            page.open("https://sellercentral.amazon.co.jp/myi/search/ProductSummary");
            break;
          case 4:
            ph.exit();
            break;
          case 4:
            page.open("https://catalog-sc.amazon.co.jp/abis/syh/SCIdentify.amzn?_encoding=UTF8&ref_=im_addlisting_dnav_home_");
            break;
          case 5:
            setGlobal(page, '__conf__', conf.amazon);
            page.evaluate(function() {
              document.querySelector('input#searchStringTextId').value = "477414813X";
              return document.querySelector("form[name='itemSearchForm']").submit();
            });
            break;
          case 6:
            setGlobal(page, '__conf__', conf.amazon);
            page.evaluate(function() {
              itemSelected('477414813X');
              return document.itemSelectedForm.submit();
            });
            break;
          case 7:
            setGlobal(page, '__conf__', conf.amazon);
            page.evaluate(function() {
              document.querySelector('#offering_condition').value = "Used|Acceptable";
              document.querySelector('#offering_condition_note').value = "多少きず等ありますが読書するのには支障がないレベルです。";
              document.querySelector('#our_price').value = "5100";
              document.querySelector('#Offer_Inventory_Quantity').value = 1;
              productTableController.buttonClicked('productTableSaveAndFinish');
              return document.productForm.submit();
            });
            break;
          case 8:
            item = {
              sku: 'FR-KP0J-MKU2',
              asin: '4774146293',
              marketplaceID: 'A1VC38T7YXB528'
            };
            setGlobal(page, '__item__', item);
            page.open("https://catalog-sc.amazon.co.jp/abis/product/DisplayEditProduct?sku=" + item.sku + "&asin=" + item.asin + "&marketplaceID=" + item.marketplaceID);
            break;
          case 9:
            page.evaluate(function() {
              document.querySelector('#our_price').value = "2900";
              document.querySelector('#Offer_Inventory_Quantity').value = 2;
              productTableController.buttonClicked('productTableSaveAndFinish');
              return document.productForm.submit();
            });
            break;
          default:
            ph.exit();
        }
      });
      return amaMan.trigger();
    });
  });

  /*
  casper = require("casper").create()
  conf = require("./config")
  
  
  # 在庫商品(すべての在庫商品)画面の表示(未サインインのため、この時点ではサインイン画面に遷移)
  casper.start "https://sellercentral.amazon.co.jp/myi/search/ProductSummary", ->
    @viewport 1024, 768
    @capture "amatest1.png"
  
  # サインイン画面にてemail、passwordを入力
  casper.then ->
    @fill 'form[name=signin]', {
      email: conf.amazon.email,
      password: conf.amazon.password
    }, true
  
  casper.thenEvaluate (email, password) ->
    document.getElementById("email").value = email
    document.getElementById("password").value = password
    document.signin.submit()
    return
  ,
    email: conf.amazon.email
    password: conf.amazon.password
  
  trs = []
  getTrs = ->
    trs = document.querySelectorAll('tr[id|=sku]')
    Array::map.call trs, (el)-> el.getAttribute('id')
      
  # 在庫商品(すべての在庫商品)画面に遷移
  casper.then ->
    @capture "amatest2.png"
    trs = @evaluate getTrs
    for tr in trs
      @echo tr
  
  casper.run ->
    @exit()
  */


}).call(this);
