// Generated by CoffeeScript 1.3.3
(function() {
  var Stream, Sync, concate, conf, db, dbfind, dbupdate, pc, pcstream, _ref;

  Sync = require('sync');

  _ref = require('./lib/stream'), Stream = _ref.Stream, concate = _ref.concate, dbfind = _ref.dbfind, dbupdate = _ref.dbupdate;

  conf = require('./config');

  pc = require('./lib/pricecheck');

  db = require('./lib/db');

  /*
  ##  stream : pipable stream
  ##
  ##  TODO: pause, resume or another unsupported
  ##        (to be referring the 'event-stream')
  */


  pcstream = function() {
    var stream;
    stream = new Stream;
    stream.name = "pcstream";
    stream.writable = true;
    stream.readable = true;
    stream.inputLength = 0;
    stream.outputLength = 0;
    stream.write = function(buffer) {
      stream.inputLength++;
      return pc.getPCInfolist(conf, [buffer.JAN], function(err, data) {
        if (err) {
          stream.emit('error', err);
          console.log("" + this.name + ": error = " + err);
          return;
        }
        if (data[0] != null) {
          return process.nextTick(function() {
            console.log("" + stream.name + ": data = " + (JSON.stringify(data[0])));
            stream.emit('data', data[0]);
            stream.outputLength++;
            return true;
          });
        } else {
          return console.log("" + this.name + ": JAN not found");
        }
      });
    };
    stream.end = function() {
      stream.emit('end');
      return console.log("" + this.name + " end: in=" + this.inputLength + ", out=" + this.outputLength + " : " + (new Date));
    };
    return stream;
  };

  /*
  ## main:
  */


  db.open(conf.db, function(err, client) {
    var Commodities, ds, dus, duscb, field, key, pcs, query;
    if (err) {
      throw err;
    }
    key = 'JAN';
    query = {};
    query[key] = {
      $ne: ''
    };
    field = {
      _id: 0
    };
    field[key] = 1;
    Commodities = client.collection('commodities');
    ds = dbfind(Commodities, query, field);
    pcs = pcstream();
    dus = dbupdate(Commodities, {}, [key]);
    duscb = function() {
      console.log("dus start: ", new Date, ds.inputLength);
      return Sync(function() {
        while (true) {
          console.log("update: " + ds.outputLength + "/" + ds.inputLength);
          if (ds.outputLength < ds.inputLength) {
            Sync.sleep(15 * 1000);
          } else {
            client.close();
            return;
          }
        }
      });
    };
    return ds.pipe(pcs).pipe(dus).on('end', duscb);
  });

}).call(this);
